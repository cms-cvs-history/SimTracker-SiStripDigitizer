process ProdStripDigi = {
    
    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    
    service = RandomNumberGeneratorService
    {
	untracked uint32 sourceSeed = 135799753
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 123456789
	    untracked uint32 g4SimHits = 194098651
	    untracked uint32 mix = 9823
	    untracked uint32 siStripDigis = 923
	}
    }
    
    
    # NOTE : if one wants to run with the SiStripDigitizer,
    #        then mag.field in the OscarProducer should be
    #        turned ON; otherwise it gets (re)created by the
    #        SiStripDigitizer, which seems to corrupt at all
    #        the edm::Event record
    
    
    # Step 1 : Event Generation
    
    # flat random E-gun, single muon
    #
    # if you want another particle type, replace the PartID
    # (standard STDHEP numbering scheme)
    #
    # to run it along with CMS detector simulation
    # (OscarProducer) make sure to select QGSP physics
    # list, instead DummyPhysics ("Dummy" has only EM
    # process and wont know to model interactions of
    # hadrons with matter)
    #
    
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
    
    untracked PSet maxEvents = {untracked int32 input = 10}
    
    source = FlatRandomPtGunSource
    {
	untracked PSet PGunParameters =
	{
	    # you can request more than 1 particle
	    #untracked vint32  PartID = {211,11}
	    untracked vint32 PartID = { 13 }
	    untracked double MinEta = -3.5
	    untracked double MaxEta = 3.5
	    untracked double MinPhi = -3.14159265358979323846 # must be in radians
	    untracked double MaxPhi =  3.14159265358979323846
	    untracked double MinPt  = 19.99
	    untracked double MaxPt  = 20.01
	}
	untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
    }
    
    # event vertex smearing - applies only once (internal check)
    # Note : all internal generatoes will always do (0,0,0) vertex
    #
    include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
    
    
    #Geometry
    #
    include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    
    # Step 2 : CMS Detector Simulation
    
    # CMS Geant4-based Det.Simulation module (OscarProducer)
    #
    include "SimG4Core/Application/data/SimG4Object.cfi"
    
    
    # Step 3 : Digitization of the simulated hits
    #
    
    # Step 3a : Digitization of the Tracker
    #
    
    # required for Pixel and SiStrip Digitizers
    include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    
    # SiStrip's digitization
    #
    include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"
    
    include "CalibTracker/Configuration/data/SiStrip_FrontierGain.cff"
    replace siStripApvGain.toGet = {{ string record = "SiStripApvGainRcd" string tag = "CSA07_SiStrip_Ideal_Gain" }}
    replace siStripApvGain.connect = "oracle://cms_orcoff_int2r/CMS_COND_STRIP"
    replace siStripApvGain.DBParameters = {
	#for ORACLE and SQLITE modes
   	untracked string authenticationPath="/afs/cern.ch/cms/DB/conddb"
	#   	untracked string authenticationPath=""
   	untracked int32 messageLevel=2
        untracked string BlobStreamerName = "DefaultBlobStreamingService"  
    }
    
    include "CalibTracker/Configuration/data/SiStrip_FrontierNoise.cff"
    replace siStripNoise.toGet = {{ string record = "SiStripNoisesRcd" string tag = "CSA07_SiStrip_Noise" }}
    replace siStripNoise.connect = "oracle://cms_orcoff_int2r/CMS_COND_STRIP"
    replace siStripNoise.DBParameters = {
	#for ORACLE and SQLITE modes
   	untracked string authenticationPath="/afs/cern.ch/cms/DB/conddb"
	#   	untracked string authenticationPath=""
   	untracked int32 messageLevel=2
	untracked string BlobStreamerName = "DefaultBlobStreamingService"  
    }
    
    include "CalibTracker/Configuration/data/SiStrip_FrontierLorentzAngle.cff"
    replace siStripLorentzAngle.toGet = {{ string record = "SiStripLorentzAngleRcd" string tag = "CSA07_SiStrip_Ideal_LAngle" }}
    replace siStripLorentzAngle.connect = "oracle://cms_orcoff_int2r/CMS_COND_STRIP"

    replace siStripLorentzAngle.DBParameters = {
	#for ORACLE and SQLITE modes
   	untracked string authenticationPath="/afs/cern.ch/cms/DB/conddb"
	#   	untracked string authenticationPath=""
   	untracked int32 messageLevel=2
        untracked string BlobStreamerName = "DefaultBlobStreamingService"
    }
    

    #Clusterizer
    include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer_CSA07.cfi"
    replace siStripClusters.UseGainFromDB  = true
    replace siStripClusters.UseCalibDataFromDB = true
    
    #RecHit builder (no need for boolean, they are in the calib cff)
    include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
    replace StripCPEfromTrackAngleESProducer.UseCalibrationFromDB =true
    
    # Lorentz angle test reader
    #   module prod1 =  SiStripLorentzAngleReader { }
    
    
    
    module mix = MixingModule
    {
	int32 bunchspace = 25
    }
    
    
    module OutPut = PoolOutputModule {
	untracked string fileName = 'stripdigi.root'
    }
    
    path p = {VtxSmeared, g4SimHits, mix, siStripDigis, siStripClusters, siStripMatchedRecHits }
    endpath ep ={OutPut}
    
}
