process ProdStripDigi = {
    
#    include "FWCore/MessageLogger/data/MessageLogger.cfi"
 include "FWCore/MessageService/data/MessageLogger.cfi"

 

  
    service = RandomNumberGeneratorService
    {
	untracked uint32 sourceSeed = 135799753
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 123456789
	    untracked uint32 g4SimHits = 194098651
	    untracked uint32 mix = 9823
	    untracked uint32 siStripDigis = 923
	}
    }
    
    
    # NOTE : if one wants to run with the SiStripDigitizer,
    #        then mag.field in the OscarProducer should be
    #        turned ON; otherwise it gets (re)created by the
    #        SiStripDigitizer, which seems to corrupt at all
    #        the edm::Event record
    
    
    # Step 1 : Event Generation
    
    # flat random E-gun, single muon
    #
    # if you want another particle type, replace the PartID
    # (standard STDHEP numbering scheme)
    #
    # to run it along with CMS detector simulation
    # (OscarProducer) make sure to select QGSP physics
    # list, instead DummyPhysics ("Dummy" has only EM
    # process and wont know to model interactions of
    # hadrons with matter)
    #
    
    include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
    
    untracked PSet maxEvents = {untracked int32 input = 10}
    
    source = FlatRandomPtGunSource
    {
	untracked PSet PGunParameters =
	{
	    # you can request more than 1 particle
	    #untracked vint32  PartID = {211,11}
	    untracked vint32 PartID = { 13 }
	    untracked double MinEta = -3.5
	    untracked double MaxEta = 3.5
	    untracked double MinPhi = -3.14159265358979323846 # must be in radians
	    untracked double MaxPhi =  3.14159265358979323846
	    untracked double MinPt  = 19.99
	    untracked double MaxPt  = 20.01
	}
	untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
    }
    
    # event vertex smearing - applies only once (internal check)
    # Note : all internal generatoes will always do (0,0,0) vertex
    #
    include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
    
    
    #Geometry
    #
    include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
#    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
include "Geometry/CMSCommonData/data/cmsMagneticFieldXML.cfi"	

es_module = VolumeBasedMagneticFieldESProducer {
  double findVolumeTolerance = 0.0
  untracked bool cacheLastVolume = true
  untracked bool timerOn = false
  untracked bool debugBuilder = false 
  bool useParametrizedTrackerField = false
}



    
    # Step 2 : CMS Detector Simulation
    
    # CMS Geant4-based Det.Simulation module (OscarProducer)
    #
    include "SimG4Core/Application/data/SimG4Object.cfi"
    
    
    # Step 3 : Digitization of the simulated hits
    #
    
    # Step 3a : Digitization of the Tracker
    #
    
    # required for Pixel and SiStrip Digitizers
    include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    
    # SiStrip's digitization
    #
#    include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"
include "CommonTools/SiStripZeroSuppression/data/SiStripNoiseService.cfi"

module siStripDigis =  SiStripDigitizer {
      vstring ROUList = {"TrackerHitsTIBLowTof","TrackerHitsTIBHighTof","TrackerHitsTIDLowTof","TrackerHitsTIDHighTof",
	"TrackerHitsTOBLowTof","TrackerHitsTOBHighTof","TrackerHitsTECLowTof","TrackerHitsTECHighTof"}	
      string SimProducer = "SimDigitizer"	
      untracked int32 VerbosityLevel = 0		 

    using SiStripNoiseServiceParameters
    bool UseLACalibrationFromDB=false
    bool UseGainFromDB=false

###-----SiStripDigitizerAlgorithm 
      double AdcThreshold = 2.
      int32 AdcFullScale = 255
      bool NoNoise = false      # NOTE : turning Noise ON/OFF will make a big change
#      bool NoNoise = true      #        on the size of SiStrip digis container !
      bool APVpeakmode = false  # also in SiLinearChargeDivider
#--------------------------------
###-----SiHitDigitizer
      double DepletionVoltage = 140.
      double AppliedVoltage = 150.
      double ChargeMobility = 480.
      double Temperature = 297.
      bool noDiffusion = false
      double ChargeDistributionRMS = 6.5e-10
      double GevPerElectron = 3.61e-09
      double HoleSaturationVelocity = 8.37e6
      double HoleBeta = 1.213
      double HoleRHAllParameter = 0.7
#--------------------------------------
###SiLinearChargeDivider
      bool LandauFluctuations = true
      int32 chargeDivisionsPerStrip = 10
      double DeltaProductionCut= 0.120425 
      untracked double CosmicDelayShift = 0.
      double SigmaShapePeak = 52.17
      double SigmaShapeDeco = 12.06
#---------------------------------------
###SiTrivialInduceChargeOnStrips
      vdouble CouplingCostant = {0.76,0.12}
#---------------------------------------	
###---SiTrivialZeroSuppress
      int32 FedAlgorithm = 4
      double FedLowThreshold = 2.
      double FedHighThreshold = 5.
#-------------------------------------
}



#    replace siStripDigis.UseCalibDataFromDB  = true
#    replace siStripDigis.UseGainFromDB  = true
#    replace siStripDigis.UseLACalibrationFromDB=true



   include "CalibTracker/Configuration/data/SiStrip_FakeGain.cff"

   include "CalibTracker/Configuration/data/SiStrip_FakeNoise.cff"

   include "CalibTracker/Configuration/data/SiStrip_FakeLorentzAngle.cff"



   include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer.cfi"
#   replace siStripClusters.UseGainFromDB  = true
#   replace siStripClusters.UseCalibDataFromDB = true


#RecHit builder
include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"

# lorentz Angle test reader
#   module prod1 =  SiStripLorentzAngleReader { }



    module mix = MixingModule
    {
	int32 bunchspace = 25
	string Label=""
    }
    
    
    module OutPut = PoolOutputModule {
	untracked string fileName = 'stripdigi.root'
    }
    
    path p = {VtxSmeared, g4SimHits, mix, siStripDigis, siStripClusters, siStripMatchedRecHits }
#    path p = {VtxSmeared, g4SimHits, mix, siStripDigis}

    endpath ep ={OutPut}
    
}
