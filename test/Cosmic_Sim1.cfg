

process PROD  = {
	untracked PSet options = {
//include "FWCore/Framework/test/cmsExceptionsFatalOption.cff"
//untracked bool wantSummary =  false
	untracked bool makeTriggerResults =  true
	}

   # initialize MessageLogger
   include "FWCore/MessageLogger/data/MessageLogger.cfi"



   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 2387
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 92
         untracked uint32 g4SimHits = 193
	 untracked uint32 mix = 333
      }
   }




   include "SimGeneral/HepPDTESSource/data/pdt.cfi"

   # Step 1 : Event Generation

   source = CosMuoGenSource 
	{
	    untracked int32 maxEvents = 6000000
#	    untracked int32 maxEvents = 1000
	    untracked double MinEn =    0.2
	    untracked double MaxEn =   10000
	    untracked double MinTheta =  0.
	    untracked double MaxTheta = 88.
	    untracked double MinPhi =    0.
	    untracked double MaxPhi =  360.
	    untracked double MinT0  =  -12.5
	    untracked double MaxT0  =   12.5
	    untracked double ElossScaleFactor = 0.0
	    untracked bool MTCCHalf = false
	    untracked bool Verbosity= false.
	}


#Filtering

	 module fil = CosmicTIFFilter
	 {
           bool filter = true
         }

	 module fil_gen = CosmicGenFilterLowGeV
	  {
	    bool filter = true
	  }


 es_source = EmptyESSource {
    string recordName     = "IdealMagneticFieldRecord"
    bool iovIsRunNotTime  = true
    vuint32 firstValid    = {1}
 }

 es_module = UniformMagneticFieldESProducer {
  double ZFieldInTesla = 0.0
 }

 es_prefer = UniformMagneticFieldESProducer{}
 
 include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"
 #include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
 include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
 include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"

# SIMULATION
 include "SimG4Core/Application/data/g4SimHits.cfi"
 replace g4SimHits.Generator.HepMCProductLabel  = "source"
 replace g4SimHits.NonBeamEvent                 = true       
 replace g4SimHits.UseMagneticField             = false
 replace g4SimHits.TrackerSD =       {
        bool    ZeroEnergyLoss = false
        bool    NeverAccumulate = false
        bool    PrintHits = false
        double  ElectronicSigmaInNanoSeconds = 12.06
        double  EnergyThresholdForPersistencyInGeV = 0.2
        double  EnergyThresholdForHistoryInGeV = 0.2
     }

 module mix = MixingModule
  {        
   int32 bunchspace = 25
  }   


#DIGITIZATION
 include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
 include "SimTracker/SiStripDigitizer/data/SiStripDigiMTCC.cfi"
   replace siStripDigis.NoNoise          = false
   replace siStripDigis.ElectronPerAdc   = 250.0
   replace siStripDigis.CouplingCostant  = {0.86,0.07}
   replace siStripDigis.PeakMode         = true

#CLUSTER
 include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer_SimData.cfi"    
  replace siStripClusters.ElectronPerAdc      = 250.0
  replace siStripClusters.ChannelThreshold    = 2.0
  replace siStripClusters.SeedThreshold       = 3.0
  replace siStripClusters.ClusterThreshold    = 5.0



#RECHIT
 include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
 include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
 include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"

  # Tracking Truth
  include "SimGeneral/TrackingAnalysis/data/trackingtruth.cfi"
  replace trackingtruth.HepMCDataLabels = {"source"}

  # Track Associators
  include "SimTracker/TrackAssociation/data/TrackAssociatorByChi2.cfi"
  include "SimTracker/TrackAssociation/data/TrackAssociatorByHits.cfi"



   path p1 = {
	g4SimHits,
	fil_gen,
	fil,
	mix,
        trackingtruth
#	, siStripDigis
#	, siStripClusters
#	, siStripMatchedRecHits
	}


   module TheTIF = PoolOutputModule
   {
      string psethack = "test2_withoutservices"
      untracked string fileName = "Cosmic_base_1.root"
      untracked PSet SelectEvents ={
        vstring SelectEvents = {"p1"}
      } 

   }

   endpath outpath = { TheTIF }

}

